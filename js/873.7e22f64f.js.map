{"version":3,"file":"js/873.7e22f64f.js","mappings":"qLACOA,GAAG,c,GACHC,MAAM,oB,GACHC,SAAA,GAASC,MAAA,GAAMC,KAAA,I,EAHzB,Q,yEACCC,EAAAA,EAAAA,IAOO,OAPPC,EAOO,EANNC,EAAAA,EAAAA,IAIM,MAJNC,EAIM,EAHLD,EAAAA,EAAAA,IAEQ,QAFRE,EAEQ,EADPF,EAAAA,EAAAA,IAAsC,UAA7BG,IAAKC,EAAAC,MAAOC,KAAK,a,OAJ9BC,QAOEC,EAAAA,EAAAA,IAAcC,I,wBCNPC,MAAA,6C,GADTC,IAAA,EAKuBjB,MAAM,S,GAChBA,MAAM,S,8EANnBI,EAAAA,EAAAA,IAAAc,EAAAA,GAAA,OACIZ,EAAAA,EAAAA,IAEM,MAFND,EAEM,EADFC,EAAAA,EAAAA,IAAmG,UAA3FN,MAAM,kBAAmBgB,MAAA,uBAA4BG,QAAKC,EAAA,KAAAA,EAAA,GAAAC,GAAEX,EAAAY,MAAQZ,EAAAY,OAAM,eAEtFR,EAAAA,EAAAA,IAMaS,EAAAA,GAAA,CANAC,SAAU,IAAKC,KAAK,U,CAJrCC,SAAAC,EAAAA,EAAAA,KAKM,IAIM,CAJKjB,EAAAY,OAAI,WAAflB,EAAAA,EAAAA,IAIM,MAJNG,EAIM,EAHJD,EAAAA,EAAAA,IAEM,MAFNE,EAEM,EADFM,EAAAA,EAAAA,IAA0Cc,EAAA,CAAxBC,SAAUnB,EAAAoB,YAAU,2BAPlDC,EAAAA,EAAAA,IAAA,UAAAC,EAAA,K,iFCCOhC,MAAM,oB,GACJA,MAAM,gB,UACTM,EAAAA,EAAAA,IAAiB,UAAb,YAAQ,K,UACZA,EAAAA,EAAAA,IAAI,qB,EAJV,Y,GAAAW,IAAA,G,EAAA,Q,UAkBMX,EAAAA,EAAAA,IAAI,qB,UACJA,EAAAA,EAAAA,IAAmC,UAA/B,8BAA0B,K,GACzBN,MAAM,iB,EApBjB,S,EAAA,c,GA4BSA,MAAM,W,EA5Bf,a,EAAA,a,0CACEI,EAAAA,EAAAA,IA+BM,MA/BNC,EA+BM,EA9BJC,EAAAA,EAAAA,IAUM,MAVNC,EAUM,CATJC,EACAK,GACAP,EAAAA,EAAAA,IAMK,0BALHF,EAAAA,EAAAA,IAIKc,EAAAA,GAAA,MAVbe,EAAAA,EAAAA,IAMuCC,EAAAL,UANvC,CAMoBM,EAASC,M,WAArBhC,EAAAA,EAAAA,IAIK,MAJqCa,IAAKkB,EAAQE,Q,EACrD/B,EAAAA,EAAAA,IAEI,KAFAa,SAPdmB,EAAAA,EAAAA,KAAAjB,GAO6BkB,EAAAC,YAAYJ,IAAK,aAAGK,KAAK,M,QACvCN,EAAQE,QAAM,EAR7BK,Q,UAceH,EAAAI,iBAAc,WAAzBvC,EAAAA,EAAAA,IAYM,MA1BVwC,EAAA,EAeMtC,EAAAA,EAAAA,IAAkF,OAA5EG,IAAK8B,EAAAI,eAAeE,OAAQC,IAAI,oBAAoB9C,MAAM,iB,OAftE+C,IAgBMzC,EAAAA,EAAAA,IAAoC,WAAA0C,EAAAA,EAAAA,IAA7BT,EAAAI,eAAeN,QAAM,IAC5B/B,EAAAA,EAAAA,IAAqD,UAAjD,iBAAa0C,EAAAA,EAAAA,IAAGT,EAAAI,eAAeM,YAAU,GAC7CC,EACAC,GACA7C,EAAAA,EAAAA,IAIM,MAJN8C,EAIM,gBAHJhD,EAAAA,EAAAA,IAEIc,EAAAA,GAAA,MAvBZe,EAAAA,EAAAA,IAqB0BM,EAAAI,eAAeU,OAAvBC,K,WAAVlD,EAAAA,EAAAA,IAEI,KAFqCa,IAAKqC,EAAKC,KAAOd,KAAMa,EAAKA,KAAME,OAAO,W,QAC7EF,EAAKC,MAAI,EAtBtBE,M,SAyBMnD,EAAAA,EAAAA,IAAsE,KAAnEU,MAAA,yBAA6B0C,UAAQnB,EAAAI,eAAegB,W,OAzB7DC,OAAA7B,EAAAA,EAAAA,IAAA,QA4BIzB,EAAAA,EAAAA,IAGM,MAHNuD,EAGM,EAFJvD,EAAAA,EAAAA,IAA6E,UAApEa,QAAKC,EAAA,KAAAA,EAAA,OAAA0C,IAAEvB,EAAAwB,aAAAxB,EAAAwB,eAAAD,IAAcE,SAA2B,IAAjBtD,EAAAuD,cAAoB,WAAQ,EA7B1EC,IA8BM5D,EAAAA,EAAAA,IAA8F,UAArFa,QAAKC,EAAA,KAAAA,EAAA,OAAA0C,IAAEvB,EAAA4B,aAAA5B,EAAA4B,eAAAL,IAAcE,SAAUtD,EAAAuD,eAAiB/B,EAAAL,SAASuC,OAAS,GAAG,UAAO,EA9B3FC,M,CAoCA,OACEC,MAAO,CACLzC,SAAU,CACRjB,KAAM2D,MACNC,UAAU,IAGdC,IAAAA,GACE,MAAO,CACLR,aAAc,EAElB,EACAS,SAAU,CACR/B,cAAAA,GACE,OAAOgC,KAAK9C,SAAS8C,KAAKV,aAC5B,GAEFW,QAAS,CACPT,WAAAA,GACMQ,KAAKV,aAAeU,KAAK9C,SAASuC,OAAS,GAC7CO,KAAKV,cAET,EACAF,WAAAA,GACMY,KAAKV,aAAe,GACtBU,KAAKV,cAET,EACAzB,WAAAA,CAAYJ,GACVuC,KAAKV,aAAe7B,CACtB,I,UC3DJ,MAAMyC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,6MFeA,GACEC,WAAY,CACVC,gBAAeA,GAEjBN,IAAAA,GACE,MAAO,CACHnD,MAAM,EACRQ,WAAY,CACV,CACEe,OAAQmC,EACR3B,MAAO,CACL,CAAEE,KAAM,SAAUD,KAAM,6CACxB,CAAEC,KAAM,YAAaD,KAAM,8CAE7BjB,OAAQ,eACRY,WAAY,cACZU,UAAY,8oEAoBd,CACEd,OAAQoC,EACR5B,MAAO,CACL,CAAEE,KAAM,SAAUD,KAAM,6CAE1BjB,OAAQ,6BACRY,WAAY,aACZU,UAAW,8yJAqCb,CACEd,OAAQqC,EACR7B,MAAO,CACL,CAAEE,KAAM,SAAUD,KAAM,wDAE1BjB,OAAQ,uBACRY,WAAY,eACZU,UAAY,6uHA8Cd,CACEd,OAAQsC,EACR9B,MAAO,CACL,CAAEE,KAAM,SAAUD,KAAM,4CACxB,CAAEC,KAAM,QAASD,KAAM,oLAEzBjB,OAAQ,kCACRY,WAAY,mBACZU,UAAW,0pHAkCb,CACEd,OAAQuC,EACR/B,MAAO,CACP,CAAEE,KAAM,SAAUD,KAAM,4CACxB,CAAEC,KAAM,QAASD,KAAM,6DAEvBjB,OAAQ,oBACRY,WAAY,mBACZU,UAAY,ynFAuDd,CACEd,OAAQwC,EACRhC,MAAO,CACL,CAAEE,KAAM,QAASD,KAAM,qGACvB,CAAEC,KAAM,SAAUD,KAAM,uEAE1BjB,OAAQ,UACRY,WAAY,eACZU,UAAW,yoFA4BnB,GGnSF,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,Q,oCJMA,GACCmB,WAAY,CACXQ,WAAUA,GAEXb,IAAAA,GACC,MAAO,CACN9D,MAAO4E,EACPjE,MAAM,EAER,GKjBD,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASkE,KAEpE,O","sources":["webpack://blog-jean/./src/views/ProjectView.vue","webpack://blog-jean/./src/components/MyProjects.vue","webpack://blog-jean/./src/components/ProjectCarousel.vue","webpack://blog-jean/./src/components/ProjectCarousel.vue?9d69","webpack://blog-jean/./src/components/MyProjects.vue?51b9","webpack://blog-jean/./src/views/ProjectView.vue?09a1"],"sourcesContent":["<template>\r\n\t<main id=\"about-page\">\r\n\t\t<div class=\"space-background\">\r\n\t\t\t<video autoplay muted loop>\r\n\t\t\t\t<source :src=\"space\" type=\"video/mp4\">\r\n\t\t\t</video>\r\n\t\t</div>\r\n\t\t<MyProjects />\r\n\t</main>\r\n</template>\r\n\r\n<script>\r\nimport MyProjects from '../components/MyProjects.vue';\r\nimport universo from '../assets/universo.mp4';\r\n\r\nexport default {\r\n\tcomponents: {\r\n\t\tMyProjects,\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tspace: universo,\r\n\t\t\tshow: true,\r\n\t\t};\r\n\t},\r\n};\r\n</script>\r\n\r\n<style>\r\n.space-background {\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\toverflow: hidden;\r\n\tz-index: -1;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n}\r\n\r\nvideo {\r\n\tmin-width: 100%;\r\n\tmin-height: 100%;\r\n\twidth: auto;\r\n\theight: auto;\r\n\r\n\t/* Ajuste para garantir que o vídeo mantenha a proporção ao redimensionar */\r\n\tobject-fit: cover;\r\n}\r\n\r\n</style>\r\n\r\n","<template>\r\n    <div style=\"display: flex; justify-content: center;\">\r\n        <button class=\"button-projects\"  style=\"font-size: 3.8rem;\" @click=\"show = !show\">PROJETOS</button>\r\n    </div>\r\n    <Transition :duration=\"550\" name=\"nested\">\r\n      <div v-if=\"show\" class=\"outer\">\r\n        <div class=\"inner\">         \r\n            <ProjectCarousel :projects=\"myProjects\" />\r\n        </div>\r\n      </div>\r\n    </Transition>\r\n  </template>\r\n\r\n<script>\r\nimport ProjectCarousel from '../components/ProjectCarousel.vue';\r\n\r\n//images\r\nimport dsMove from '../assets/projects/dsMove.png';\r\nimport blogPessoal from '../assets/projects/blogPessoal.png';\r\nimport tarefasCRUD from '../assets/projects/tarefasCRUD.png';\r\nimport nlwCopa from '../assets/projects/nlwCopa.png';\r\nimport biblioteca from '../assets/projects/biblioteca.png';\r\nimport net8 from '../assets/projects/net8.png';\r\n\r\nexport default {\r\n  components: {\r\n    ProjectCarousel,\r\n  },\r\n  data() {\r\n    return {\r\n        show: false,\r\n      myProjects: [\r\n        {\r\n          imagem: blogPessoal,\r\n          links: [\r\n            { text: 'GitHub', link: 'https://github.com/jeanlsfortes/blog-jean' },\r\n            { text: 'Live Demo', link: 'https://jeanlsfortes.github.io/blog-jean/' }\r\n          ],\r\n          titulo: 'Blog Pessoal',\r\n          anoCriacao: 'agosto 2024',\r\n          descricao:  `<h1>My Blog</h1>\r\n            É um blog pessoal desenvolvido com <strong>Vue.js</strong> que serve como um portfólio interativo para compartilhar as experiências, projetos e certificações de um desenvolvedor. Este blog é uma plataforma dinâmica e moderna onde o autor pode documentar sua jornada profissional, destacando suas habilidades e conquistas.</p>\r\n            <br>\r\n            <h2>Tecnologias Utilizadas</h2>\r\n            <br>\r\n            <h3>Frontend: Vue.js</h3>\r\n            <br>\r\n            <ul>\r\n                <li><strong>Vue.js</strong> é um framework JavaScript progressivo utilizado para construir interfaces de usuário. Ele é conhecido por sua simplicidade e flexibilidade, permitindo a criação de componentes reutilizáveis e uma integração fácil com outras bibliotecas ou projetos existentes. Com Vue.js, o blog é altamente responsivo e oferece uma experiência de usuário fluida.</li>\r\n            </ul>\r\n            <br>\r\n            <h2>Funcionalidades do My Blog</h2>\r\n            <br>\r\n            <ul>\r\n                <li><strong>Apresentação de Experiências</strong>: O blog permite ao desenvolvedor compartilhar suas experiências profissionais, detalhando projetos anteriores, desafios enfrentados e soluções implementadas.</li>\r\n                <li><strong>Portfólio de Trabalhos</strong>: Uma seção dedicada para exibir os projetos desenvolvidos, com descrições detalhadas, tecnologias utilizadas e links para repositórios ou demonstrações ao vivo.</li>\r\n                <li><strong>Certificações</strong>: Uma área onde o desenvolvedor pode listar suas certificações, cursos concluídos e outras qualificações relevantes, demonstrando seu compromisso com o aprendizado contínuo.</li>\r\n                <li><strong>Blog de Artigos Técnicos</strong>: O desenvolvedor pode publicar artigos sobre temas técnicos, tutoriais e insights da indústria, contribuindo para a comunidade de desenvolvedores e compartilhando seu conhecimento.</li>\r\n                <li><strong>Interface Responsiva</strong>: Desenvolvido com Vue.js, o blog é adaptável a diferentes dispositivos, proporcionando uma experiência consistente em desktops, tablets e smartphones.</li></ul>`\r\n        },\r\n        {\r\n          imagem: net8,\r\n          links: [\r\n            { text: 'GitHub', link: 'https://github.com/jeanlsfortes/Catalogo'}\r\n          ],\r\n          titulo: 'Catálogo de Produtos - API',\r\n          anoCriacao: 'julho 2024',\r\n          descricao: `<h1>API RESTful com .NET 8 e Testes Unitários</h1>\r\n                      <br>\r\n                      <p>Este projeto foi desenvolvido como parte de um curso que aborda os principais recursos para a criação de APIs REST na plataforma .NET utilizando o <strong>ASP.NET Core</strong>. O projeto explora conceitos fundamentais e avançados na construção de Web APIs robustas e escaláveis.</p>\r\n                      <br>\r\n                      <h2>Tecnologias e Conceitos Abordados</h2>\r\n                      <br>\r\n                      <ul>\r\n                          <li><strong>REST</strong>: Implementação de APIs seguindo os princípios RESTful, garantindo uma comunicação padronizada e eficiente entre cliente e servidor.</li>\r\n                          <li><strong>JSON</strong>: Utilização do formato JSON (JavaScript Object Notation) para troca de dados entre o cliente e o servidor, garantindo leveza e compatibilidade com diversas plataformas.</li>\r\n                          <li><strong>HTTP</strong>: Exploração dos métodos HTTP (GET, POST, PUT, DELETE) para realizar as operações de CRUD (Create, Read, Update, Delete) na API.</li>\r\n                          <li><strong>ASP.NET Core</strong>: Framework utilizado para a criação de Web APIs modernas, seguras e de alta performance, aproveitando as vantagens do .NET Core.</li>\r\n                          <li><strong>Entity Framework Core</strong>: Implementação do EF Core na abordagem Code-First, facilitando a modelagem de dados e a interação com o banco de dados. O projeto também explora a aplicação de Migrations para gerenciar alterações no esquema do banco de dados.</li>\r\n                      </ul>\r\n                      <br>\r\n                      <h2>Funcionalidades e Padrões de Projeto</h2>\r\n                      <br>\r\n                      <ul>\r\n                          <li><strong>Roteamento</strong>: Configuração de rotas personalizadas para os endpoints da API, permitindo um controle granular sobre as URLs e a forma como as requisições são tratadas.</li>\r\n                          <li><strong>Filtros</strong>: Implementação de filtros para manipulação de requisições e respostas, incluindo autenticação, autorização e tratamento de erros.</li>\r\n                          <li><strong>Métodos Assíncronos</strong>: Utilização de métodos assíncronos (async/await) para melhorar a performance e a escalabilidade da API, especialmente em operações que envolvem I/O (Input/Output).</li>\r\n                          <li><strong>Logging</strong>: Configuração de logging para monitoramento e diagnóstico da aplicação, facilitando a identificação e resolução de problemas.</li>\r\n                          <li><strong>Tratamento de Erros</strong>: Implementação de estratégias para captura e tratamento de erros, garantindo respostas adequadas e informativas aos clientes da API.</li>\r\n                          <li><strong>Paginação de Dados</strong>: Implementação de paginação para controlar o volume de dados retornado em respostas, melhorando a performance e a usabilidade da API.</li>\r\n                          <li><strong>Padrões Repository e Unit of Work</strong>: Adoção dos padrões Repository e Unit of Work para organizar a lógica de acesso a dados e garantir transações consistentes.</li>\r\n                          <li><strong>AutoMapper</strong>: Utilização do AutoMapper para simplificar o mapeamento entre objetos de domínio e Data Transfer Objects (DTOs), facilitando a transformação de dados entre camadas da aplicação.</li>\r\n                      </ul>\r\n                      <br>\r\n                      <h2>Testes Unitários</h2>\r\n                      <br>\r\n                      <ul>\r\n                          <li><strong>NUnit</strong>: O projeto utiliza o framework de testes <strong>NUnit</strong> para a criação e execução de testes unitários, garantindo a qualidade e a robustez do código.</li>\r\n                          <li><strong>Moq</strong>: Para simular dependências e testar a lógica de negócios de forma isolada, o projeto faz uso da biblioteca <strong>Moq</strong>, permitindo a criação de mocks e stubs para classes e interfaces.</li>\r\n                          <li><strong>Testes de Controllers</strong>: Testes focados nos controllers da API foram implementados para verificar se as rotas e ações estão funcionando corretamente, incluindo testes de cenários de sucesso e de erro.</li>\r\n                          <li><strong>Testes de Repositórios</strong>: Os repositórios foram testados para garantir que as operações de acesso a dados funcionem conforme o esperado, assegurando a integridade das transações.</li>\r\n                          <li><strong>Testes de Serviços</strong>: Os serviços, que encapsulam a lógica de negócios, também foram testados para validar sua funcionalidade e garantir que as regras de negócio sejam aplicadas corretamente.</li>\r\n                      </ul><br>`\r\n        },\r\n        {\r\n          imagem: tarefasCRUD,\r\n          links: [\r\n            { text: 'GitHub', link: 'https://github.com/jeanlsfortes/ProjetoTarefasCRUD/' },\r\n          ],\r\n          titulo: 'Projeto Tarefas CRUD',\r\n          anoCriacao: 'Maio de 2023',\r\n          descricao:  `<h1>CRUD em C# com .NET 6 </h1>\r\n              <br>\r\n                <p>Este projeto é um CRUD (Create, Read, Update, Delete) desenvolvido em <strong>C#</strong> utilizando o framework <strong>.NET 6</strong>. \r\n                  A aplicação faz uso de <strong>Dapper</strong> para interações eficientes com o banco de dados, aproveitando a simplicidade e flexibilidade desse micro ORM. O projeto também adota o padrão de repositório para a separação de lógica de acesso a dados, promovendo um design limpo e fácil de manter.</p>\r\n                  <br>\r\n                <h2>Estrutura do Projeto</h2>\r\n                <br>\r\n                <h3>Controllers</h3>\r\n                <br>\r\n                <ul>\r\n                  <li>Os <strong>Controllers</strong> são responsáveis por gerenciar as requisições HTTP, vinculando as ações aos métodos do CRUD. Eles garantem a lógica de roteamento e comunicação com os serviços e repositórios, permitindo que as operações de criar, ler, atualizar e deletar dados sejam executadas conforme esperado.</li>\r\n                </ul>\r\n                <br>\r\n                <h3>Enums</h3>\r\n                <br>\r\n                <ul>\r\n                  <li>O projeto utiliza <strong>Enums</strong> para definir conjuntos de valores nomeados, facilitando o gerenciamento de estados ou opções predefinidas, como status de registros, tipos de usuários, entre outros. Os enums melhoram a legibilidade e a manutenção do código, além de reduzir erros associados a valores constantes dispersos.</li>\r\n                </ul>\r\n                <br>\r\n                <h3>Models e Propriedades</h3>\r\n                <br>\r\n                <ul>\r\n                  <li>Os <strong>Models</strong> representam as entidades do domínio, como tabelas do banco de dados. Eles contêm <strong>propriedades</strong> que refletem as colunas dessas tabelas e incluem validações e anotações que definem o comportamento dos dados. Os models são essenciais para garantir a integridade e consistência dos dados na aplicação.</li>\r\n                </ul>\r\n                <br>\r\n                <h3>Conexão com Banco de Dados</h3>\r\n                <br>\r\n                <ul>\r\n                  <li>A conexão com o banco de dados é gerenciada de forma eficiente utilizando <strong>Dapper</strong>, um micro ORM que permite consultas SQL rápidas e flexíveis. Com o Dapper, o acesso a dados é simplificado, facilitando a execução de comandos SQL e mapeamento de resultados para objetos C#.</li>\r\n                </ul>\r\n                <br>\r\n                <h3>Repositórios</h3>\r\n                <br>\r\n                <ul>\r\n                  <li>Os <strong>Repositórios</strong> encapsulam a lógica de acesso a dados, proporcionando uma camada de abstração entre os controllers e o banco de dados. Eles centralizam as operações de persistência e recuperação de dados, promovendo um código mais modular e testável.</li>\r\n                </ul>\r\n                <br>\r\n                <h2>Tecnologias e Pacotes Utilizados</h2>\r\n                <br>\r\n                <ul>\r\n                  <li><strong>.NET 6</strong>: Framework utilizado para construir a aplicação, fornecendo uma base sólida e moderna para o desenvolvimento.</li>\r\n                  <li><strong>Dapper</strong>: Micro ORM utilizado para facilitar a interação com o banco de dados de forma rápida e eficiente.</li>\r\n                  <li><strong>Entity Framework Core</strong>: Embora o Dapper seja o principal ORM, o projeto também inclui o Entity Framework Core para funcionalidades adicionais, como migrações de banco de dados.</li>\r\n                  <li><strong>Swashbuckle.AspNetCore</strong>: Ferramenta utilizada para gerar documentação interativa da API via Swagger, facilitando o desenvolvimento e o consumo da API.</li>\r\n                </ul><br>`\r\n        },\r\n        {\r\n          imagem: biblioteca,\r\n          links: [\r\n            { text: 'GitHub', link: 'https://github.com/jeanlsfortes/Entrega/' },\r\n            { text: 'Figma', link: 'https://www.figma.com/proto/3lo7TIja6hDdFJfDYysM8J/Prot%C3%B3tipos-de-alto-n%C3%ADvel--Livraria-Bora-Ler-Jorgin?node-id=34-4&starting-point-node-id=34%3A4&t=S4TZ5Mh0gjpj5ZPl-1' }\r\n          ],\r\n          titulo: 'Sistema de Gestão de Biblioteca',\r\n          anoCriacao: 'setembro de 2022',\r\n          descricao: `<h1>Sistema de Gestão de Biblioteca</h1>\r\n                    <br>\r\n                    <p>Este projeto foi desenvolvido voluntariamente para a <strong>Biblioteca Municipal Raul Brandão</strong>. Embora apenas o início do projeto tenha sido disponibilizado, ele foi entregue e atualmente está em uso na biblioteca, facilitando a gestão de livros e usuários.</p>\r\n                      <br>\r\n                    <h2>Tecnologias Utilizadas</h2>\r\n                    <br>\r\n                    <ul>\r\n                        <li><strong>Java 18</strong>: A versão mais recente do Java foi utilizada para garantir a eficiência e a compatibilidade com as novas funcionalidades da linguagem.</li>\r\n                        <li><strong>Spring Boot</strong>: Este framework foi escolhido por sua facilidade de configuração e pela capacidade de criar aplicações empresariais robustas e escaláveis.</li>\r\n                        <li><strong>Spring Data JPA</strong>: Utilizado para o gerenciamento de dados, o Spring Data JPA simplifica a integração entre a aplicação e o banco de dados, permitindo a implementação de repositórios personalizados.</li>\r\n                        <li><strong>Hibernate</strong>: O Hibernate foi integrado ao projeto para o mapeamento objeto-relacional (ORM), facilitando a interação com o banco de dados relacional.</li>\r\n                        <li><strong>Maven</strong>: Maven foi usado para a gestão de dependências e construção do projeto, garantindo um ambiente de desenvolvimento consistente.</li>\r\n                        <li><strong>Lombok</strong>: Utilizado para reduzir a verbosidade do código, gerando automaticamente getters, setters, construtores e outros métodos.</li>\r\n                        <li><strong>H2 Database</strong>: Um banco de dados em memória foi utilizado para testes e desenvolvimento rápido, garantindo que a aplicação pudesse ser testada sem a necessidade de um banco de dados externo.</li>\r\n                    </ul>\r\n                      <br>\r\n                    <h2>Arquitetura do Sistema</h2>\r\n                    <br>\r\n                    <p>A arquitetura do sistema foi baseada em um modelo de <strong>Repository-Service</strong>, garantindo uma separação clara das responsabilidades e facilitando a manutenção e a escalabilidade do código.</p>\r\n                    <br>\r\n                    <ul>\r\n                        <li><strong>Repository</strong>: A camada de repositórios foi implementada utilizando Spring Data JPA, permitindo o acesso aos dados de forma abstrata e encapsulando a lógica de persistência.</li>\r\n                        <li><strong>Service</strong>: A camada de serviços foi responsável por implementar a lógica de negócios, utilizando os repositórios para acessar os dados e processá-los conforme as regras de negócio.</li>\r\n                        <li><strong>Service Implementation</strong>: As classes de implementação dos serviços foram projetadas para serem facilmente extensíveis, permitindo a adição de novas funcionalidades sem comprometer o código existente.</li>\r\n                    </ul>\r\n                    <br>\r\n                    <h2>Funcionalidades do Sistema</h2>\r\n                    <br>\r\n                    <ul>\r\n                        <li><strong>Gestão de Livros</strong>: Permite a adição, edição, remoção e consulta de livros no acervo da biblioteca.</li>\r\n                        <li><strong>Gestão de Usuários</strong>: Funcionalidades para cadastro, consulta e gerenciamento de usuários da biblioteca.</li>\r\n                        <li><strong>Empréstimos e Devoluções</strong>: Sistema para registrar e gerenciar o empréstimo e devolução de livros, com controle de prazos e penalidades.</li>\r\n                    </ul>`,\r\n        },\r\n        {\r\n          imagem: nlwCopa,\r\n          links: [\r\n          { text: 'GitHub', link: 'https://github.com/jeanlsfortes/NLW-Copa' },\r\n          { text: 'Figma', link: 'https://www.figma.com/community/file/1169028343875283461' },\r\n          ],\r\n          titulo: 'NLW Copa do Mundo',\r\n          anoCriacao: 'novembro de 2022',\r\n          descricao:  `<h1>NLW Copa do Mundo</h1>\r\n            <div align=\"center\">\r\n                <img src=\"https://img.shields.io/static/v1?label=NLW&message=10&color=F7DD43&labelColor=202024\" alt=\"NLW 10 - Copa\" />\r\n                <a href=\"LICENSE\"><img src=\"https://img.shields.io/static/v1?label=License&message=MIT&color=F7DD43&labelColor=202024\" alt=\"License\"></a>\r\n            </div>\r\n\r\n            <img src=\".github/web.png\">\r\n\r\n            <h2>💻 Projeto</h2>\r\n            <p>Aplicação para participar de bolões da Copa do Mundo 2022.</p>\r\n            <p>Participei deste evento e construí uma aplicação inteira do zero, tanto web quanto mobile.</p>\r\n\r\n            <h2>✨ Tecnologia</h2>\r\n            <ul>\r\n                <li><a href=\"https://www.typescriptlang.org/\">TypeScript</a></li>\r\n                <li><a href=\"https://reactjs.org/\">React</a></li>\r\n                <li><a href=\"https://reactnative.dev/\">React Native</a></li>\r\n                <li><a href=\"https://expo.dev/\">Expo</a></li>\r\n                <li><a href=\"https://www.fastify.io/\">Fastify</a></li>\r\n                <li><a href=\"https://www.prisma.io/\">Prisma</a></li>\r\n                <li>E muitas outras…</li>\r\n            </ul>\r\n\r\n            <h2>🚀 Como executar</h2>\r\n            <p>Em todos os projetos, ao acessar a pasta, é preciso baixar os pacotes com o gerenciador de sua preferência.</p>\r\n            <p>Acesse a documentação de cada projeto:</p>\r\n            <ul>\r\n                <li><a href=\"./server/README.md\">Backend</a></li>\r\n                <li><a href=\"./web/README.md\">Web</a></li>\r\n                <li><a href=\"./mobile/README.md\">Mobile</a></li>\r\n            </ul>\r\n\r\n            <h2>🔖 Layout</h2>\r\n            <p>Você pode visualizar o layout do projeto através do link abaixo:</p>\r\n            <ul>\r\n                <li><a href=\"https://www.figma.com/community/file/1169028343875283461\">Layout</a></li>\r\n            </ul>\r\n            <p>Lembrando que você precisa ter uma conta no <a href=\"http://figma.com/\">Figma</a>.</p>\r\n\r\n            <h2>📝 License</h2>\r\n            <p>Esse projeto está sob a licença MIT. Veja o arquivo <a href=\"LICENSE\">LICENSE</a> para mais detalhes.</p>\r\n\r\n            <hr>\r\n\r\n            <div align=\"center\">\r\n                <p>Feito com 💜 by Rocketseat</p>\r\n                <p><a href=\"https://discord.gg/rocketseat\">👉 Participe da nossa comunidade 👈</a></p>\r\n            </div>\r\n\r\n            <div align=\"center\">\r\n                <a href=\"https://discord.gg/rocketseat\" target=\"_blank\">\r\n                    <img align=\"center\" src=\"https://storage.googleapis.com/golden-wind/comunidade/rodape.svg\" alt=\"banner\"/>\r\n                </a>\r\n            </div>`\r\n        },\r\n        {\r\n          imagem: dsMove,\r\n          links: [\r\n            { text: 'Figma', link: 'https://www.figma.com/design/4HzGv8DN95FNzgzT9AvefK/DSMovie1?node-id=113-182&t=fk6v69IQZl4mhJNq-1' },\r\n            { text: 'GitHub', link: 'https://github.com/jeanlsfortes/Projeto-Dsmovie/tree/main/frontend' },\r\n          ],\r\n          titulo: 'DSMovie',\r\n          anoCriacao: 'janeiro 2022',\r\n          descricao: `  <h1>DSMove</h1>\r\n                        <br>\r\n                        <p><strong>DSMove</strong> é uma aplicação inovadora desenvolvida com <strong>React</strong> no Frontend e <strong>Spring</strong> no Backend. Esta plataforma permite aos usuários avaliar e comentar sobre uma vasta seleção de filmes. Com uma interface intuitiva e responsiva, os usuários podem facilmente navegar, buscar e avaliar seus filmes favoritos, contribuindo para uma comunidade engajada e apaixonada por cinema.</p>\r\n                        <br>\r\n                        <h2>Tecnologias Utilizadas</h2>\r\n                        <br>\r\n                        <h3>Frontend: React</h3>\r\n                        <br>\r\n                        <ul>\r\n                            <li><strong>React</strong> é uma biblioteca JavaScript amplamente utilizada para construir interfaces de usuário. Ela permite a criação de componentes reutilizáveis, facilitando a manutenção e a escalabilidade do código. Com React, a interface do usuário é atualizada de forma eficiente em resposta às mudanças de dados, proporcionando uma experiência de usuário fluida e dinâmica.</li>\r\n                        </ul>\r\n                        <br>\r\n                        <h3>Backend: Spring</h3>\r\n                        <br>\r\n                        <ul>\r\n                            <li><strong>Spring</strong> é um framework Java para desenvolvimento de aplicações robustas e escaláveis. Ele oferece uma ampla gama de funcionalidades, incluindo injeção de dependência, segurança, transações e suporte a APIs RESTful. O Spring facilita a criação de aplicações empresariais complexas, garantindo alta performance e facilidade de manutenção.</li>\r\n                        </ul>\r\n                        <br>\r\n                        <h2>Funcionalidades do DSMove</h2>\r\n                        <br>\r\n                        <ul>\r\n                            <li><strong>Avaliação de Filmes</strong>: Os usuários podem avaliar filmes com base em uma escala de estrelas, deixando comentários e feedbacks detalhados.</li>\r\n                            <li><strong>Busca e Navegação</strong>: A plataforma permite a busca eficiente de filmes por título, gênero ou ano de lançamento.</li>\r\n                            <li><strong>Interface Responsiva</strong>: Desenvolvida com React, a interface é adaptável a diferentes dispositivos, proporcionando uma experiência consistente em desktops, tablets e smartphones.</li>\r\n                            <li><strong>Segurança e Performance</strong>: Utilizando Spring no backend, o DSMove garante a segurança dos dados dos usuários e a alta performance nas operações de busca e avaliação.</li></ul>`\r\n        }\r\n      ],\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n.outer, .inner {\r\n\tbackground: #eee;\r\n  padding: 30px;\r\n  min-height: 100px;\r\n}\r\n  \r\n.inner { \r\n  background: #ccc;\r\n}\r\n  \r\n.nested-enter-active, .nested-leave-active {\r\n\ttransition: all 0.3s ease-in-out;\r\n}\r\n.nested-leave-active {\r\n  transition-delay: 0.25s;\r\n}\r\n\r\n.nested-enter-from,\r\n.nested-leave-to {\r\n  transform: translateY(30px);\r\n  opacity: 0;\r\n}\r\n\r\n.nested-enter-active .inner,\r\n.nested-leave-active .inner { \r\n  transition: all 0.3s ease-in-out;\r\n}\r\n.nested-enter-active .inner {\r\n\ttransition-delay: 0.25s;\r\n}\r\n\r\n.nested-enter-from .inner,\r\n.nested-leave-to .inner {\r\n  transform: translateX(30px);\r\n  opacity: 0.001;\r\n}\r\n\r\n.button-projects{\r\n    padding: 20px 60px; \r\n    color: inherit;\r\n    font-size: inherit;\r\n    text-shadow: 0 0 10px rgba(255, 255, 255, 0.8), 0 0 20px rgba(255, 255, 255, 0.932), 0 0 30px rgba(255, 255, 255, 0.4);\r\n    animation: shine 2s infinite alternate;\r\n}\r\n\r\n\r\n@keyframes shine {\r\n  from {\r\n    text-shadow: 0 0 10px rgba(255, 255, 255, 0.8), 0 0 20px rgba(255, 255, 255, 0.6), 0 0 30px rgba(255, 255, 255, 0.4);\r\n  }\r\n  to {\r\n    text-shadow: 0 0 20px rgba(255, 255, 255, 1), 0 0 30px rgba(255, 255, 255, 0.8), 0 0 40px rgba(255, 255, 255, 0.6);\r\n  }\r\n}\r\n\r\n</style>","<template>\r\n  <div class=\"project-carousel\">\r\n    <div class=\"project-menu\">\r\n      <h2>Projetos</h2>\r\n      <br>\r\n      <ul>\r\n        <li v-for=\"(project, index) in projects\" :key=\"project.titulo\">\r\n          <a @click.prevent=\"goToProject(index)\" href=\"#\">\r\n            {{ project.titulo }}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    \r\n    <div v-if=\"currentProject\">\r\n      <img :src=\"currentProject.imagem\" alt=\"Imagem do projeto\" class=\"project-image\" />\r\n      <h2>{{ currentProject.titulo }}</h2>\r\n      <h4>Produzido em {{ currentProject.anoCriacao }}</h4>\r\n      <br>\r\n      <h4>Codificação e documentação</h4>\r\n      <div class=\"project-links\">\r\n        <a v-for=\"link in currentProject.links\" :key=\"link.text\" :href=\"link.link\" target=\"_blank\">\r\n          {{ link.text }}\r\n        </a>\r\n      </div>\r\n      <p style=\"text-align: justify;\" v-html=\"currentProject.descricao\"></p> \r\n    </div>\r\n    \r\n    <div class=\"buttons\">\r\n      <button @click=\"prevProject\" :disabled=\"currentIndex === 0\">Anterior</button>\r\n      <button @click=\"nextProject\" :disabled=\"currentIndex === projects.length - 1\">Próximo</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    projects: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      currentIndex: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    currentProject() {\r\n      return this.projects[this.currentIndex];\r\n    },\r\n  },\r\n  methods: {\r\n    nextProject() {\r\n      if (this.currentIndex < this.projects.length - 1) {\r\n        this.currentIndex++;\r\n      }\r\n    },\r\n    prevProject() {\r\n      if (this.currentIndex > 0) {\r\n        this.currentIndex--;\r\n      }\r\n    },\r\n    goToProject(index) {\r\n      this.currentIndex = index;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.project-carousel {\r\n  text-align: center;\r\n  margin: 20px;\r\n}\r\n\r\n.project-menu {\r\n  margin-bottom: 20px;\r\n  text-align: left;\r\n}\r\n\r\n.project-menu ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  display: flex;\r\n  gap: 15px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.project-menu li {\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.project-menu a {\r\n  color: var(--text-color);\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n  transition: background-color 0.3s, color 0.3s;\r\n}\r\n\r\n.project-menu a:hover {\r\n  background-color: var(--light);\r\n  color: white;\r\n}\r\n\r\n.project-image {\r\n  max-width: 100%;\r\n  height: auto;\r\n  margin-bottom: 10px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.project-links {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 15px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.project-links a {\r\n  color: var(--text-color);\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n  transition: color 0.3s;\r\n}\r\n\r\n.project-links a:hover {\r\n  color: var(--light);\r\n}\r\n\r\n.buttons {\r\n  margin-top: 20px;\r\n}\r\n\r\nbutton {\r\n  padding: 10px 20px;\r\n  margin: 0 10px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: var(--light);\r\n  color:var(--text-color);\r\n  transition: background-color 0.3s;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: var(--text-color);\r\n}\r\n\r\nbutton:disabled {\r\n  cursor: not-allowed;\r\n  opacity: 0.5;\r\n}\r\n</style>\r\n","import { render } from \"./ProjectCarousel.vue?vue&type=template&id=6fa0bbe2&scoped=true\"\nimport script from \"./ProjectCarousel.vue?vue&type=script&lang=js\"\nexport * from \"./ProjectCarousel.vue?vue&type=script&lang=js\"\n\nimport \"./ProjectCarousel.vue?vue&type=style&index=0&id=6fa0bbe2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6fa0bbe2\"]])\n\nexport default __exports__","import { render } from \"./MyProjects.vue?vue&type=template&id=bb1dc84e\"\nimport script from \"./MyProjects.vue?vue&type=script&lang=js\"\nexport * from \"./MyProjects.vue?vue&type=script&lang=js\"\n\nimport \"./MyProjects.vue?vue&type=style&index=0&id=bb1dc84e&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ProjectView.vue?vue&type=template&id=ad32d05c\"\nimport script from \"./ProjectView.vue?vue&type=script&lang=js\"\nexport * from \"./ProjectView.vue?vue&type=script&lang=js\"\n\nimport \"./ProjectView.vue?vue&type=style&index=0&id=ad32d05c&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["id","class","autoplay","muted","loop","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","src","$data","space","type","_hoisted_4","_createVNode","_component_MyProjects","style","key","_Fragment","onClick","_cache","$event","show","_Transition","duration","name","default","_withCtx","_component_ProjectCarousel","projects","myProjects","_createCommentVNode","_","_renderList","$props","project","index","titulo","_withModifiers","$options","goToProject","href","_hoisted_5","currentProject","_hoisted_6","imagem","alt","_hoisted_7","_toDisplayString","anoCriacao","_hoisted_8","_hoisted_9","_hoisted_10","links","link","text","target","_hoisted_11","innerHTML","descricao","_hoisted_12","_hoisted_13","args","prevProject","disabled","currentIndex","_hoisted_14","nextProject","length","_hoisted_15","props","Array","required","data","computed","this","methods","__exports__","components","ProjectCarousel","blogPessoal","net8","tarefasCRUD","biblioteca","nlwCopa","dsMove","MyProjects","universo","render"],"sourceRoot":""}